using ems.system.Models;
using ems.utilities.Functions;
using System;
using System.Collections.Generic;
using System.Data.Odbc;
using System.Data;
using System.Linq;
using System.Web;
using ems.crm.Models;

namespace ems.crm.DataAccess
{
    public class DaRegion
    {
        dbconn objdbconn = new dbconn();
        cmnfunctions objcmnfunctions = new cmnfunctions();
        string msSQL = string.Empty;
        string msSQL1 = string.Empty;
        OdbcDataReader objodbcDataReader;
        DataTable dt_datatable;
        int mnResult;
        string msGetGid, msGetGid1, lsentity_name, lsregion_code, lsregion_name;


        public void DaGetRegionSummary(MdlRegion values)
        {
            msSQL = " select region_gid,region_code,region_name from crm_mst_tregion order by region_gid desc";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getmodulelist = new List<region_lists1>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getmodulelist.Add(new region_lists1
                    {
                        region_gid = dt["region_gid"].ToString(),
                        region_code = dt["region_code"].ToString(),
                        region_name = dt["region_name"].ToString(),

                    });
                    values.region_lists1 = getmodulelist;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaPostRegion(string user_gid, region_lists1 values)
        {
          



                msSQL = " select region_code from crm_mst_tregion where region_code='" + values.region_code + " '  ";
                objodbcDataReader = objdbconn.GetDataReader(msSQL);
                if (objodbcDataReader.HasRows)
                {
                    lsregion_code = objodbcDataReader["region_code"].ToString();
                }
                if (lsregion_code != values.region_code)
                {





                    msGetGid = objcmnfunctions.GetMasterGID("BRNM");





                    msSQL = " insert into crm_mst_tregion(" +
                            " region_gid," +
                            " region_code," +
                            " region_name," +
                            " city," +
                            " created_by," +
                            " created_date)" +
                            " values(" +
                            " '" + msGetGid + "'," +
                            " '" + values.region_code + "'," +
                            "'" + values.region_name + "'," +
                            " '" + values.city_name + "',";



                    msSQL += "'" + user_gid + "'," +
                             "'" + DateTime.Now.ToString("yyyy-MM-dd") + "')";
                    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);



                    if (mnResult != 0)
                    {
                        values.status = true;
                        values.message = "Region Added Successfully !!";
                    }
                    else
                    {
                        values.status = false;
                        values.message = "Error While Adding Region!!";
                    }
                }
                else
                {
                    values.status = false;
                    values.message = "Same Region Code Already Exist !!";
                }
            }

            public void DaUpdateRegion(string user_gid, region_lists1 values)

        {
          
                         msSQL = " select region_code from crm_mst_tregion where region_code='" + values.region_code_edit + " '  ";
                    objodbcDataReader = objdbconn.GetDataReader(msSQL);
                    if (objodbcDataReader.HasRows)
                    {
                        lsregion_code = objodbcDataReader["region_code"].ToString();
                        values.status = false;
                        return;

                    }

                    if (lsregion_code != values.region_code_edit)
                    {
                        msSQL = " update  crm_mst_tregion set " +
         " region_name = '" + values.region_name_edit + "'," +
         " region_code = '" + values.region_code_edit + "'," +
         " updated_by = '" + user_gid + "'," +
         " updated_date = '" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "' where region_gid='" + values.region_gid + "'  ";

                    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                    if (mnResult == 1)
                    {
                        values.status = true;
                        values.message = "Region Updated Successfully !!";
                    }
                    else
                    {
                        values.status = false;
                        values.message = "Error While Updating Region !!";
                    }
                }
            else
            {
                values.status = false;
                values.message = "Same Region code Already Exist !!";
            }
        }
    
    

    
        public void DaDeleteRegion(string region_gid, region_lists1 values)
        {
            msSQL = "  delete from crm_mst_tregion where region_gid='" + region_gid + "'  ";
            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
            if (mnResult != 0)
            {
                values.status = true;
                values.message = "Region Deleted Successfully !!";
            }
            else
            {
                values.status = false;
                values.message = "Error While Deleting Region !!";
            }

        }
    }
}