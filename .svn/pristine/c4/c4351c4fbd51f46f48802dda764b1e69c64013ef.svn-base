using ems.system.Models;
using ems.utilities.Functions;
using Microsoft.SqlServer.Server;
using Newtonsoft.Json;
using OfficeOpenXml.FormulaParsing.Excel.Functions.Logical;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.Odbc;
using System.IO;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Reflection.Emit;
using System.Runtime.InteropServices;
using System.Web;
using static OfficeOpenXml.ExcelErrorValue;
using static System.Collections.Specialized.BitVector32;

namespace ems.system.DataAccess
{
    public class DaIndustry
    {
        dbconn objdbconn = new dbconn();
        cmnfunctions objcmnfunctions = new cmnfunctions();
        string msSQL = string.Empty;
        string msSQL1 = string.Empty;
        OdbcDataReader objodbcDataReader;
        DataTable dt_datatable;
        int mnResult;
        string msGetGid, msGetGid1, lsindustry_name, lscategoryindustry_code;

        // Module Master Summary
        public void DaGetIndustrySummary(MdlIndustry values)
        {
            msSQL = " select categoryindustry_gid,   categoryindustry_code, categoryindustry_name,  category_desc ,created_by,created_date from crm_mst_tcategoryindustry order by categoryindustry_gid desc";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<industry_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new industry_list
                    {
                        industry_gid = dt["categoryindustry_gid"].ToString(),
                        industry_code = dt["categoryindustry_code"].ToString(),
                        industry_name = dt["categoryindustry_name"].ToString(),
                        industry_description = dt["category_desc"].ToString(),
                        created_by = dt["created_by"].ToString(),
                        created_date = dt["created_date"].ToString(),
                    });
                    values.industry_list = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaPostIndustry(string user_gid, industry_list values)

        {
            msSQL = " select categoryindustry_code from crm_mst_tcategoryindustry where categoryindustry_code = '" + values.industry_code + "' ";
            objodbcDataReader = objdbconn.GetDataReader(msSQL);
            if (objodbcDataReader.HasRows)
            {
                lscategoryindustry_code = objodbcDataReader["categoryindustry_code"].ToString();
                values.status = false;
                return;
            }
            if (lscategoryindustry_code != values.industry_code)
            {

                msGetGid = objcmnfunctions.GetMasterGID("BCIM");

                msSQL = " insert into crm_mst_tcategoryindustry(" +
                     " categoryindustry_gid ," +
                     " categoryindustry_code," +
                     " categoryindustry_name," +
                     " category_desc," +
                     " created_by, " +
                     " created_date)" +
                     " values(" +
                      " '" + msGetGid + "'," +
                        " '" + values.industry_code + "'," +
                        "'" + values.industry_name + "'," +
                         "'" + values.industry_description + "',";

                msSQL += "'" + user_gid + "'," +
                         "'" + DateTime.Now.ToString("yyyy-MM-dd") + "')";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

                if (mnResult != 0)
                {
                    values.status = true;
                    values.message = " Industry Added Successfully !!";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Adding Industry !!";

                }
            }
            else
            {
                values.status = false;
                values.message = "Same Entity Already Exist !!";
            }
            

        }


        public void DaGetupdateindustrydetails(string user_gid, industry_list values)

        {


            msSQL = " update  crm_mst_tcategoryindustry set " +
             " categoryindustry_name = '" + values.industryedit_name + "'," +
             " category_desc = '" + values.industryedit_description + "'," +
             " updated_by = '" + user_gid + "'," +
             " updated_date = '" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "' where categoryindustry_gid='" + values.industry_gid + "'  ";

            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
            if (mnResult == 1)

            {

                values.status = true;

                values.message = "Industry Updated Successfully !!";

            }

            else

            {

                values.status = false;

                values.message = "Error While Updating Industry !!";

            }

        }


        public void DaGetdeleteindustrydetails(string industry_gid, industry_list values)

        {

            msSQL = "  delete from crm_mst_tcategoryindustry where categoryindustry_gid='" + industry_gid + "'  ";

            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

            if (mnResult != 0)

            {

                values.status = true;

                values.message = "Industry Deleted Successfully !!";

            }

            else

            {

                values.status = false;

                values.message = "Error While Deleting Industry !!";

            }



        }
    }
}
        

     
 
