using ems.utilities.Functions;
using ems.utilities.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Net;
using System.Web;
using System.Web.Http;
using ems.sales.Models;
using ems.sales.DataAccess;

namespace ems.sales.Controllers
{
    [RoutePrefix("api/SmrTrnCustomerSummary")]
    [Authorize]
    public class SmrTrnCustomerSummaryController:ApiController
    {
        session_values Objgetgid = new session_values();
        logintoken getsessionvalues = new logintoken();
        DaSmrTrnCustomerSummary objDaSales = new DaSmrTrnCustomerSummary();
        // Module Summary
        [ActionName("GetSmrTrnCustomerSummary")]
        [HttpGet]
        public HttpResponseMessage GetSmrTrnCustomerSummary()
        {
            MdlSmrTrnCustomerSummary values = new MdlSmrTrnCustomerSummary();
            objDaSales.DaGetSmrTrnCustomerSummary( values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        [ActionName("Getcountry")]
        [HttpGet]
        public HttpResponseMessage Getcountry()
        {
            MdlSmrTrnCustomerSummary values = new MdlSmrTrnCustomerSummary();
            objDaSales.DaGetcountry(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("Getcurency")]
        [HttpGet]
        public HttpResponseMessage Getcurency()
        {
            MdlSmrTrnCustomerSummary values = new MdlSmrTrnCustomerSummary();
            objDaSales.DaGetcurrency(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }
        [ActionName("Gettax")]
        [HttpGet]
        public HttpResponseMessage Gettax()
        {
            MdlSmrTrnCustomerSummary values = new MdlSmrTrnCustomerSummary();
            objDaSales.DaGettax(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("Getregion")]
        [HttpGet]
        public HttpResponseMessage Getregion()
        {
            MdlSmrTrnCustomerSummary values = new MdlSmrTrnCustomerSummary();
            objDaSales.DaGetregion(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("Getcustomercity")]
        [HttpGet]
        public HttpResponseMessage Getcustomercity()
        {
            MdlSmrTrnCustomerSummary values = new MdlSmrTrnCustomerSummary();
            objDaSales.DaGetcustomercity(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetCustomerCode")]
        [HttpGet]
        public HttpResponseMessage GetCustomerCode()
        {
            MdlSmrTrnCustomerSummary values = new MdlSmrTrnCustomerSummary();
            objDaSales.DaGetCustomerCode(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }


        [ActionName("Postcustomer")]
        [HttpPost]
        public HttpResponseMessage Postcustomer(postcustomer_list values)
        {
            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            objDaSales.DaPostCustomer(getsessionvalues.user_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }



    }
}