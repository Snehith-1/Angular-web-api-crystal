using ems.utilities.Functions;
using System;
using System.Collections.Generic;
using System.Data.Odbc;
using System.Data;
using System.Linq;
using System.Web;
using ems.crm.Models;

namespace ems.crm.DataAccess
{
    public class DaCampaignService
    {
        dbconn objdbconn = new dbconn();
        cmnfunctions objcmnfunctions = new cmnfunctions();
        string msSQL = string.Empty;
        string msSQL1 = string.Empty;
        OdbcDataReader objodbcDataReader;
        DataTable dt_datatable;
        int mnResult;
        string msGetGid, msGetGid1;

        public void DaGetWhatsappSummary(MdlCampaignService values)
        {
            msSQL = " select * from crm_smm_whatsapp_service limit 1";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getmodulelist = new List<campaignservice_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getmodulelist.Add(new campaignservice_list
                    {
                        s_no = dt["s_no"].ToString(),
                        access_token = dt["access_token"].ToString(),
                        base_url = dt["base_url"].ToString(),
                        workspace_id = dt["workspace_id"].ToString(),
                        created_by = dt["created_by"].ToString(),

                        created_date = dt["created_date"].ToString(),




                    });
                    values.campaignservice_list = getmodulelist;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaUpdateWhatsappService(string user_gid, campaignservice_list values)

        {


            if (values.whatsapp_id == null || values.whatsapp_id == "")
            {


                msSQL = " insert into crm_smm_whatsapp_service(" +
                 " access_token," +
                 " base_url," +
                 " workspace_id," +
                 " created_by," +
                 " created_date)" +
                 " values(" +
                  "'" + values.whatsapp_accesstoken + "'," +
                 "'" + values.base_url + "'," +
                 " '" + values.workspace_id + "'," +
                 "'" + user_gid + "'," +
                  "'" + DateTime.Now.ToString("yyyy-MM-dd") + "')";
                        mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);



                if (mnResult != 0)
                {
                    values.status = true;
                    values.message = "\"Whatsapp Credentials Updated Successfully !!";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Updating Whatsapp Credentials !!";
                }

            }
            else
            {
                msSQL = " update  crm_smm_whatsapp_service set " +

                " access_token = '" + values.whatsapp_accesstoken + "'," +
                " base_url = '" + values.base_url + "'," +
                " workspace_id = '" + values.workspace_id + "'," +
                " updated_by = '" + user_gid + "'," +

                " updated_date = '" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "' where s_no='" + values.whatsapp_id + "' ";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                if (mnResult == 1)
                {
                    values.status = true;
                    values.message = "Whatsapp Credentials Updated Successfully !!";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Updating Whatsapp Credentials !!";
                }
            }
        }

        public void DaGetShopifySummary(MdlCampaignService values)
        {
            msSQL = " select * from crm_smm_shopify_service limit 1";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getmodulelist = new List<shopifycampaignservice_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getmodulelist.Add(new shopifycampaignservice_list
                    {

                        s_no = dt["s_no"].ToString(),
                        shopify_access_token = dt["access_token"].ToString(),
                        shopify_store_name = dt["shopify_store_name"].ToString(),
                        store_month_year = dt["store_month_year"].ToString(),
                        shopify_created_by = dt["created_by"].ToString(),

                        shopify_created_date = dt["created_date"].ToString(),




                    });
                    values.shopifycampaignservice_list = getmodulelist;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaGetMailSummary(MdlCampaignService values)
        {
            msSQL = " select * from crm_smm_mail_service limit 1 ";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getmodulelist = new List<mailcampaignservice_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getmodulelist.Add(new mailcampaignservice_list
                    {
                        mail_access_token = dt["access_token"].ToString(),
                        mail_base_url = dt["base_url"].ToString(),
                        mail_created_by = dt["created_by"].ToString(),
                        s_no = dt["s_no"].ToString(),
                        mail_created_date = dt["created_date"].ToString(),




                    });
                    values.mailcampaignservice_list = getmodulelist;
                }
            }
            dt_datatable.Dispose();
        }
 
        public void DaUpdateShopifyService(string user_gid, shopifyservcie_list values)
        {

            if (values.shopify_id == null || values.shopify_id == "")
            {


                msSQL = " insert into crm_smm_shopify_service(" +
                        " access_token," +
                        " shopify_store_name," +
                        " store_month_year," +
                        " created_by," +
                        " created_date)" +
                        " values(" +
                        "'" + values.shopify_accesstoken + "'," +
                         " '" + values.shopify_store_name + "'," +
                        " '" + values.store_month_year + "',";
                msSQL += "'" + user_gid + "'," +
                         "'" + DateTime.Now.ToString("yyyy-MM-dd") + "')";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                if (mnResult != 0)
                {
                    values.status = true;
                    values.message = "Shopify Credentials Updated Successfully !!";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Updating Shopify Credentials!!";
                }

            }
            else
            {
                msSQL = " update  crm_smm_shopify_service set " +

                " access_token = '" + values.shopify_accesstoken + "'," +

                " shopify_store_name = '" + values.shopify_store_name + "'," +
                " store_month_year = '" + values.store_month_year + "'," +

                " updated_by = '" + user_gid + "'," +

                " updated_date = '" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "' where s_no='" + values.shopify_id + "' ";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                if (mnResult == 1)
                {
                    values.status = true;
                    values.message = "Shopify Credentials Updated Successfully !!";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Updating Shopify Credentials !!";
                }
            }

        }
        public void DaUpdateEmailService(string user_gid, emailservice_list values)
        {

            if (values.email_id == null || values.email_id == "")
            {


                msSQL = " insert into crm_smm_mail_service(" +
                        " access_token," +
                        " base_url," +
                        " created_by," +
                        " created_date)" +
                        " values(" +
                        "'" + values.mail_access_token + "'," +
                        " '" + values.mail_base_url + "',";
                msSQL += "'" + user_gid + "'," +
                         "'" + DateTime.Now.ToString("yyyy-MM-dd") + "')";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                if (mnResult != 0)
                {
                    values.status = true;
                    values.message = "Email Credentials Updated Successfully !!";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Updating Email Credentials !!";
                }

            }
            else
            {
                msSQL = " update  crm_smm_mail_service set " +

                " access_token = '" + values.mail_access_token + "'," +
                " base_url = '" + values.mail_base_url + "'," +
                " updated_by = '" + user_gid + "'," +

                " updated_date = '" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "' where s_no='" + values.email_id + "' ";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                if (mnResult == 1)
                {
                    values.status = true;
                    values.message = "Email Credentials Updated Successfully !!";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Updating Email Credentials !!";
                }
            }

        }
    }
}
    