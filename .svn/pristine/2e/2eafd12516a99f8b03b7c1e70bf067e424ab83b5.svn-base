import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';
import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';
import { Subscription, Observable } from 'rxjs';
import { first } from 'rxjs/operators';
import { ActivatedRoute, Router } from '@angular/router';
import { environment } from '../../../../environments/environment.development';
import { SocketService } from '../../../ems.utilities/services/socket.service';

@Component({
  selector: 'app-crm-mst-customeradd',
  templateUrl: './crm-mst-customeradd.component.html',
  styleUrls: ['./crm-mst-customeradd.component.scss']
})
export class CrmMstCustomerAddComponent implements OnInit, OnDestroy {
  // KeenThemes mock, change it to:
  defaultAuth: any = { };
  region_list: any[] = [];
  currency_list: any[] = [];
  country_list: any[] = [];
  customerform: FormGroup | any;
  hasError?: boolean;
  returnUrl?: string;
  submitted = false;

  // private fields
  private unsubscribe: Subscription[] = []; 
  responsedata: any;
  result: any;

  constructor(
    private fb: FormBuilder,
    private route: ActivatedRoute,
    private router: Router,
    private service: SocketService,
  ) {
    this.customerform = new FormGroup({
      customercode: new FormControl('', Validators.required),
      customername:new FormControl('', Validators.required),
      contactpersonname:new FormControl('', Validators.required),
      designation:new FormControl(''),
      contacttelephonenumber:new FormControl('',Validators.pattern(/^[0-9]+$/)),
      Email_ID: new FormControl('',  Validators.pattern(/^[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/)),
      Contact_No:new FormControl('', Validators.pattern(/^[0-9]+$/)),
      Fax:new FormControl(''),
      Address1:new FormControl(''),
      address2:new FormControl(''),
      city:new FormControl(''),
      state:new FormControl(''),
      pincode:new FormControl(''),
      country:new FormControl(''),
      Region:new FormControl(''),
      CompanyWebsite:new FormControl(''),
      currency:new FormControl(''),
      gstnumber:new FormControl('',Validators.pattern(/[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[0-9]{1}[A-Z]{1}[0-9A-Z]{1}$/)),
     
    });

  }

  ngOnInit(): void {

    var api = 'EinvoiceCustomer/Getcurrencydropdown';
    this.service.get(api).subscribe((result: any) => {
      this.responsedata = result;
      this.currency_list = this.responsedata.Getcurrencydropdown;
    

      setTimeout(()=>{  

        $('#currency_list').DataTable();

      }, 0.1);
    });
    var api = 'EinvoiceCustomer/Getcountrydropdown';
    this.service.get(api).subscribe((result: any) => {
      this.responsedata = result;
      this.country_list = this.responsedata.Getcountrydropdown;
    

      setTimeout(()=>{  

        $('#country_list').DataTable();

      }, 0.1);
    });
    var api = 'EinvoiceCustomer/GetRegiondropdown';
    this.service.get(api).subscribe((result: any) => {
      this.responsedata = result;
      this.region_list = this.responsedata.GetRegiondropdown;
    

      setTimeout(()=>{  

        $('#region_list').DataTable();

      }, 0.1);
    });
  }  
  get gstControl(){
    return this.customerform.get('gstnumber');
  }
  get customercodeControl(){
    return this.customerform.get('customercode');
  }
  get customernameControl() {
    return this.customerform.get('customername')
  }
  get contactpersonnamecontrol() {
    return this.customerform.get('contactpersonname')
  }
  get Contactnocontrol() {
    return this.customerform.get('Contact_No')
  }
  get CurrencyCodecontol() {
    return this.customerform.get('currency')
  }
  get authmailControl() {
    return this.customerform.get('Email_ID')
  }
  get CompanyWebsitecontrol() {
    return this.customerform.get('CompanyWebsite')
  }
 

  submit() {
    const api = 'EinvoiceCustomer/PostCustomer';
    this.service.post(api,this.customerform.value).subscribe((result: any) => {
          this.responsedata = result;
          this.router.navigate(['/einvoice/CrmMstCustomer']);
        }
      , (error: any) => {
        if (error.status === 401)
          this.router.navigate(['pages/401'])
        else if (error.status === 404)
          this.router.navigate(['pages/404'])
      });
    
  }
 
  redirecttolist(){
    this.router.navigate(['/einvoice/CrmMstCustomer']);
  }
  ngOnDestroy(): void {

  }
}
