using ems.utilities.Functions;
using System;
using System.Collections.Generic;
using System.Data.Odbc;
using System.Data;
using System.Linq;
using System.Web;
using ems.pmr.Models;

namespace ems.pmr.DataAccess
{
    public class DaPmrTrnGrnQcchecker
    {
        dbconn objdbconn = new dbconn();
        cmnfunctions objcmnfunctions = new cmnfunctions();
        HttpPostedFile httpPostedFile;
        string msSQL = string.Empty;
        string msSQL1 = string.Empty;
        OdbcDataReader objODBCDatareader;
        DataTable dt_datatable;
        string msEmployeeGID, lsemployee_gid, lsentity_code, lsdesignation_code, lsCode, msGetGid, msGetGid1, msGetPrivilege_gid, msGetModule2employee_gid, maGetGID, lsvendor_code, msUserGid;
        int mnResult, mnResult1, mnResult2, mnResult3, mnResult4, mnResult5;

        public void DaGetPmrTrnGrnQcchecker(string grn_gid, MdlPmrTrnGrnQcchecker values)
        {
            msSQL = msSQL = " select a.grn_gid, a.dc_no, date_format(a.grn_date,'%d-%m-%Y') as grn_date,a.vendor_gid, " +
                    " a.checkeruser_gid,a.vendor_contact_person, " +
                    " a.purchaseorder_list,a.grn_remarks,a.grn_reference, " +
                    " concat(b.user_firstname,' - ',d.department_name) as user_firstname, " +
                    " e.vendor_gid, e.vendor_companyname, e.contactperson_name,CONCAT(p.user_firstname, ' ', p.user_lastname) AS user_checkername, " +
                    " e.contact_telephonenumber,e.email_id,concat(f.address1,'',f.address2) as address " +
                    " from pmr_trn_tgrn a " +
                    " left join adm_mst_tuser b on a.user_gid=b.user_gid " +
                    " left join hrm_mst_temployee c on c.user_gid = b.user_gid " +
                    " left join hrm_mst_tdepartment d on c.department_gid=d.department_gid " +
                    " left join acp_mst_tvendor e on e.vendor_gid = a.vendor_gid " +
                    " left join adm_mst_taddress f on e.address_gid=f.address_gid " +
                    " left join adm_mst_tuser p on a.user_gid=p.user_gid " +
                     " where a.grn_gid = '" + grn_gid + "' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetGrnQcChecker_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetGrnQcChecker_list
                    {
                        grn_gid = dt["grn_gid"].ToString(),
                        vendor_companyname = dt["vendor_companyname"].ToString(),
                        grn_date = dt["grn_date"].ToString(),
                        vendor_contact_person = dt["vendor_contact_person"].ToString(),
                        contact_telephonenumber = dt["contact_telephonenumber"].ToString(),
                        email_id = dt["email_id"].ToString(),
                        address = dt["address"].ToString(),
                        purchaseorder_list = dt["purchaseorder_list"].ToString(),
                        user_firstname = dt["user_firstname"].ToString(),
                        grn_remarks = dt["grn_remarks"].ToString(),
                        grn_reference = dt["grn_reference"].ToString(),
                        user_checkername = dt["user_checkername"].ToString(),
                        dc_no = dt["dc_no"].ToString(),

                    });

                    values.GetGrnQcChecker_list = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaGetPmrTrnGrnQccheckerpo(string grn_gid, MdlPmrTrnGrnQcchecker values)
        {
            msSQL = " select a.grn_gid, b.grndtl_gid,b.product_gid, b.product_remarks, b.qty_delivered,b.qty_shortage,b.display_field, " +
                " c.product_name, c.product_code, d.productgroup_name, e.productuom_name,e.productuom_gid,f.product_price,b.purchaseorderdtl_gid, " +
                " h.location_name,k.bin_number from pmr_trn_tgrn a " +
                " left join pmr_trn_tgrndtl b on a.grn_gid = b.grn_gid " +
                " left join pmr_mst_tproduct c on b.product_gid = c.product_gid " +
                " left join pmr_mst_tproductgroup d on c.productgroup_gid = d.productgroup_gid " +
                " left join pmr_mst_tproductuom e on e.productuom_gid = b.uom_gid " +
                " left join pmr_trn_tpurchaseorderdtl f on f.purchaseorderdtl_gid=b.purchaseorderdtl_gid" +
                " left join ims_mst_tlocation h on b.location_gid=h.location_gid " +
                " left join ims_mst_tbin k on b.bin_gid=k.bin_gid" +
                " where a.grn_gid = '" + grn_gid + "'";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetGrnQcChecker_lists>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetGrnQcChecker_lists
                    {
                        product_gid = dt["product_gid"].ToString(),
                        productgroup_name = dt["productgroup_name"].ToString(),
                        product_code = dt["product_code"].ToString(),
                        product_name = dt["product_name"].ToString(),
                        productuom_name = dt["productuom_name"].ToString(),
                        qty_delivered = dt["qty_delivered"].ToString(),
                        qty_shortage = dt["qty_shortage"].ToString(),
                        display_field = dt["product_remarks"].ToString(),
                        location_name = dt["location_name"].ToString(),
                        bin_number = dt["bin_number"].ToString(),

                    });

                    values.GetGrnQcChecker_lists = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }



    }
}