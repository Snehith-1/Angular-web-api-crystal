using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using ems.crm.Models;
using ems.utilities.Functions;
using System.Data.Odbc;
using System.Data;
using System.Web;
using OfficeOpenXml;
using System.Configuration;
using System.IO;
using OfficeOpenXml.Style;
using System.Drawing;
using System.Net.Mail;
using RestSharp;
using Newtonsoft.Json;
using System.Web.UI.WebControls;
using System.ComponentModel;
using ems.system.Models;
using System.Globalization;
using System.Net.NetworkInformation;
using System.Text.RegularExpressions;

namespace ems.crm.DataAccess
{
    public class DaMarketingmanager
    {
        dbconn objdbconn = new dbconn();
        cmnfunctions objcmnfunctions = new cmnfunctions();
        string msSQL = string.Empty;
        string msSQL1 = string.Empty;
        OdbcDataReader objodbcDataReader;
        DataTable dt_datatable;
        int mnResult;
        string msGetGid, msGetGid1, lsentity_name, lsemployee_gid, lsuser_gid, msGetappointmentGid, msGetsheduleGid;

        // Module Master Summary
        public void DaGetMarketingManagerSummary(string user_gid, MdlMarketingmanager values)
        {

            if (user_gid != null && user_gid!="")
            {
                msSQL1 = " SELECT employee_gid FROM hrm_mst_temployee where user_gid='" + user_gid + "' ";
                lsemployee_gid = objdbconn.GetExecuteScalar(msSQL1);
            }
            else
            {
                lsemployee_gid = null;

            }

            msSQL = "SELECT a.campaign_gid, a.campaign_title,a.campaign_location,c.branch_name, " +
     "(SELECT COUNT(x.employee_gid) as employeecount FROM crm_trn_tcampaign2employee x WHERE x.campaign_gid = a.campaign_gid) as employeecount, " +
     "(SELECT COUNT(x.lead2campaign_gid) as total FROM crm_trn_tlead2campaign x WHERE x.campaign_gid = a.campaign_gid) as assigned_leads, " +
     "(SELECT COUNT(x.lead2campaign_gid) as new FROM crm_trn_tlead2campaign x WHERE x.so_status <>'Y' and (x.leadstage_gid ='1' or x.leadstage_gid is null) and x.campaign_gid = a.campaign_gid) as newleads, " +
     "(SELECT COUNT(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x WHERE x.so_status <>'Y' and (x.leadstage_gid ='2') and x.campaign_gid = a.campaign_gid) as followup, " +
     "(SELECT COUNT(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x WHERE x.so_status <>'Y' and (x.leadstage_gid ='4') and x.campaign_gid = a.campaign_gid) as visit, " +
     "(SELECT COUNT(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x WHERE x.so_status <>'Y' and (x.leadstage_gid ='3') and x.campaign_gid = a.campaign_gid) as prospect, " +
     "(SELECT COUNT(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x WHERE (x.leadstage_gid ='5') and x.campaign_gid = a.campaign_gid) as drop_status, " +
     "(SELECT COUNT(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x WHERE (x.leadstage_gid ='6') and x.campaign_gid = a.campaign_gid) as customer, " +
     "(SELECT COUNT(*) FROM crm_trn_tlead2campaign WHERE DATEDIFF(NOW(), created_date) > 7 and leadstage_gid='1' and campaign_gid = a.campaign_gid) as Lapsed_lead, " +
     "(SELECT COUNT(*) FROM crm_trn_tlead2campaign WHERE DATEDIFF(NOW(), created_date) > 7 and leadstage_gid<4 and campaign_gid = a.campaign_gid) as Longest_lead " +
         "FROM crm_trn_tcampaign a " +
         "LEFT JOIN hrm_mst_tbranch c ON a.campaign_location = c.branch_gid " +
         "WHERE a.campaign_gid IN (SELECT team_gid FROM cmn_trn_tmanagerprivilege WHERE employee_gid = '" + lsemployee_gid + "')GROUP BY a.campaign_gid " +
         "ORDER BY a.campaign_gid DESC";


            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<marketingmanager_lists>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new marketingmanager_lists
                    {
                       
                       

                        campaign_gid = dt["campaign_gid"].ToString(),
                        campaign_title = dt["campaign_title"].ToString(),
                        campaign_location = dt["campaign_location"].ToString(),
                        branch_name = dt["branch_name"].ToString(),
                        employeecount = dt["employeecount"].ToString(),
                        assigned_leads = dt["assigned_leads"].ToString(),
                        Lapsed_Leads = dt["Lapsed_lead"].ToString(),
                        Longest_Leads = dt["Longest_lead"].ToString(),
                        newleads = dt["newleads"].ToString(),
                        followup = dt["followup"].ToString(),
                        visit = dt["visit"].ToString(),
                        prospect = dt["prospect"].ToString(),
                        drop_status = dt["drop_status"].ToString(),
                        customer = dt["customer"].ToString(),

                    });
                    values.marketingmanager_lists = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaGetManagerSummaryDetailTable(string campaign_gid, MdlMarketingmanager values)
        {
            msSQL = "  select distinct a.campaign_gid,e.department_name," +
                        " a.employee_gid as assign_to,concat(c.user_firstname, '-', c.user_code) as user, " +
                        " ( SELECT count(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x " +
                        " where x.assign_to = a.employee_gid and x.campaign_gid = a.campaign_gid) as total, " +
                        " (SELECT count(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x " +
                        " where x.assign_to = a.employee_gid and (x.leadstage_gid ='1' or x.leadstage_gid is null) and x.campaign_gid = a.campaign_gid) as newleads, " +
                        " (SELECT count(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x " +
                        " where x.assign_to = a.employee_gid and x.leadstage_gid ='2' and x.campaign_gid = a.campaign_gid) as followup, " +
                        " (SELECT count(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x " +
                         " where x.assign_to = a.employee_gid and x.leadstage_gid ='4' and x.campaign_gid = a.campaign_gid) as visit, " +
                        " (SELECT count(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x " +
                        " where x.assign_to = a.employee_gid and x.leadstage_gid ='3' and x.campaign_gid = a.campaign_gid) as prospect, " +
                        " (SELECT count(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x " +
                        " where x.assign_to = a.employee_gid and x.leadstage_gid ='5' and x.campaign_gid = a.campaign_gid) as drop_status, " +
                        " (SELECT count(x.lead2campaign_gid) FROM crm_trn_tlead2campaign x " +
                        " where x.assign_to = a.employee_gid and x.leadstage_gid ='6' and x.campaign_gid = a.campaign_gid) as customer " +
                        " from crm_trn_tcampaign2employee a" +
                        " left join hrm_mst_temployee b on a.employee_gid = b.employee_gid " +
                        " left join adm_mst_tuser c on c.user_gid=b.user_gid " +
                        " left join hrm_mst_tdepartment e on b.department_gid=e.department_gid" +
                        " where a.campaign_gid= '" + campaign_gid + "' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<managerDetailTable_lists>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new managerDetailTable_lists
                    {
                      

                        campaign_gid = dt["campaign_gid"].ToString(),
                        department_name = dt["department_name"].ToString(),
                        assign_to = dt["assign_to"].ToString(),
                        user = dt["user"].ToString(),
                        total = dt["total"].ToString(),
                        newleads = dt["newleads"].ToString(),
                        followup = dt["followup"].ToString(),
                        visit = dt["visit"].ToString(),
                        prospect = dt["prospect"].ToString(),
                        drop_status = dt["drop_status"].ToString(),
                        customer = dt["customer"].ToString(),
                       


                    });
                    values.managerDetailTable_lists = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaGetCampaignmanagerSummary(string campaign_gid, string assign_to, string stages, MdlMarketingmanager values)
        {
            msSQL = " Select b.customer_type AS customer_type,  b.leadbank_name,i.call_response," +
               " concat(g.leadbankcontact_name,' / ',g.mobile,' / ',g.email) as contact_details," +
               " concat(d.region_name,'/',b.leadbank_city,'/',b.leadbank_state,'/',h.source_name) as region_name," +
               " b.remarks as internal_notes," +
               " concat(y.user_firstname,' ',y.user_lastname)As created_by,z.leadstage_name," +
               " a.lead2campaign_gid, a.leadbank_gid, a.campaign_gid, g.leadbankcontact_gid" +
               " From crm_trn_tlead2campaign a" +
               " left join crm_trn_tleadbank b on a.leadbank_gid = b.leadbank_gid        " +
               " left join crm_mst_tregion d on b.leadbank_region=d.region_gid           " +
               " left join crm_trn_tleadbankcontact g on b.leadbank_gid = g.leadbank_gid " +
               " left join crm_mst_tsource h on b.source_gid=h.source_gid                " +
               " left join crm_trn_tcampaign k on a.campaign_gid=k.campaign_gid          " +
               " left join hrm_mst_temployee x on a.created_by=x.employee_gid            " +
               " left join adm_mst_tuser y on x.user_gid=y.user_gid                      " +
               " left join crm_mst_tleadstage z on a.leadstage_gid=z.leadstage_gid " +
               " left join crm_trn_tcalllog i on i.leadbank_gid=b.leadbank_gid " +
               " where a.assign_to = '" + assign_to + "' and " +
               " a.campaign_gid = '" + campaign_gid + "'";
        if (stages == "leadiden")
        {

                msSQL += "and a.leadstage_gid='1'";
        }
        else if (stages == "first")
            {
                msSQL += "and a.leadstage_gid='2'";
            }
            else if (stages == "qualified")
            {
                msSQL += "and a.leadstage_gid='3'";
            }
            else if (stages == "negotiation")
            {
                msSQL += "and a.leadstage_gid='4'";
            }
            else if (stages == "oip")
            {
                msSQL += "and a.leadstage_gid='6'";
            }
           
        msSQL += " order by b.leadbank_name asc";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetCampaignmanagerSummary>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetCampaignmanagerSummary
                    {

                      

                        leadbank_name = dt["leadbank_name"].ToString(),
                        call_response = dt["call_response"].ToString(),
                        contact_details = dt["contact_details"].ToString(),
                        customer_type = dt["customer_type"].ToString(),
                        region_name = dt["region_name"].ToString(),
                        internal_notes = dt["internal_notes"].ToString(),
                        created_by = dt["created_by"].ToString(),
                        leadstage_name = dt["leadstage_name"].ToString(),
                        lead2campaign_gid = dt["lead2campaign_gid"].ToString(),
                        leadbank_gid = dt["leadbank_gid"].ToString(),
                        campaign_gid = dt["campaign_gid"].ToString(),
                        leadbankcontact_gid = dt["leadbankcontact_gid"].ToString(),
                        


                    });
                    values.GetCampaignmanagerSummary = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaGetCampaignmanagerTeam(string campaign_gid, string assign_to, MdlMarketingmanager values)
        {
            msSQL = " SELECT  (Select campaign_title from crm_trn_tcampaign where campaign_gid ='" + campaign_gid + "') AS campaign_title, " +
                   " (select concat(b.user_firstname, ' ', b.user_lastname) as user_firstname from hrm_mst_temployee a  " +
                   " inner join adm_mst_tuser b on a.user_gid = b.user_gid where employee_gid ='" + assign_to + "') AS user_firstname";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetCampaignmanagerTeam>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetCampaignmanagerTeam
                    {



                        campaign_title = dt["campaign_title"].ToString(),
                        user_firstname = dt["user_firstname"].ToString(),
                       



                    });
                    values.GetCampaignmanagerTeam = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaGetCampaignMoveToBin(string user_gid, campaignbin_list values)
        {
            for (int i = 0; i < values.campaign_list.ToArray().Length; i++)
            {
                msSQL = " select employee_gid from hrm_mst_temployee where user_gid = '" + user_gid + "' ";
                objodbcDataReader = objdbconn.GetDataReader(msSQL);
                if (objodbcDataReader.HasRows)
                {
                    lsemployee_gid = objodbcDataReader["employee_gid"].ToString();
                }
                msSQL = " update crm_trn_tlead2campaign Set " +
                        " assign_to = '" + lsemployee_gid + "'" +
                        " where leadbank_gid = '" + values.campaign_list[i].leadbank_gid + "'and" +
                        " assign_to = '" + values.assign_user + "' and " +
                        " lead2campaign_gid='" + values.campaign_list[i].lead2campaign_gid + "' ";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                

                if (mnResult != 0)
                {
                    values.status = true;
                    values.message = "Lead moved to myBin successfully";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Lead moved to myBin";
                }

            }






        }
        public void DaGetCampaignMoveToTransfer(string user_gid, campaigntransfer_list values)
        {
            for (int i = 0; i < values.campaign_list.ToArray().Length; i++)
            {
              
                msSQL = " update crm_trn_tlead2campaign Set " +
                        " assign_to = '" + values.team_member + "'," +
                        " campaign_gid = '" + values.team_name + "'" +
                        " where leadbank_gid = '" + values.campaign_list[i].leadbank_gid + "'and" +
                        " assign_to = '" + values.assign_user + "' and " +
                        " lead2campaign_gid='" + values.campaign_list[i].lead2campaign_gid + "' ";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);


                if (mnResult != 0)
                {
                    values.status = true;
                    values.message = "Lead Transfer Successfully";
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Lead Transfer";
                }

            }






        }
        public void DaGetCampaignSchedule(string user_gid, campaignschedule_list values)
        {
            for (int i = 0; i < values.campaign_list.ToArray().Length; i++)
            {

                msGetGid = objcmnfunctions.GetMasterGID("BLGP");
                msSQL = " insert into crm_trn_tlog ( " +
                        " log_gid, " +
                        " leadbank_gid, " +
                        " log_type, " +
                        " log_desc, " +
                        " log_by, " +
                        " reference_gid," +
                        " log_date ) " +
                        " values (  " +
                        " '" + msGetGid + "', " +
                        " '" + values.campaign_list[i].leadbank_gid + "', " +
                        " 'Schedule'," +
                        " '" + values.schedule_remarks + "', " +
                        " '" + user_gid + "'," +
                        " '" + values.campaign_list[i].lead2campaign_gid + "', " +
                        " '" + DateTime.Now.ToString("yyyy-MM-dd  HH:mm:ss") + "' )";
                mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                if (mnResult != 0)
                {
                    msSQL = " select employee_gid from hrm_mst_temployee where user_gid = '" + user_gid + "' ";
                    objodbcDataReader = objdbconn.GetDataReader(msSQL);
                    if (objodbcDataReader.HasRows)
                    {
                        lsemployee_gid = objodbcDataReader["employee_gid"].ToString();
                    }
                    msGetappointmentGid = objcmnfunctions.GetMasterGID("APMT");



                    string[] substrings = values.schedule_date.Split('-');
                    string schedule_date = substrings[2] + "-" + substrings[1] + "-" + substrings[0];

                    msSQL = " insert into cmn_trn_tscheduleappointments( " +
                      " appointment_gid, " +
                      " appointment_start, " +
                      " appointment_end, " +
                      " appointment_summary, " +
                      " appointment_description, " +
                      " appointment_from, " +
                      " employee_gid, " +
                      " created_date, " +
                      " created_by, " +
                      " reference_gid " +
                      " )values( " +
                      " '" + msGetappointmentGid + "', " +
                      " '" + schedule_date + " " + values.schedule_time + "', " +
                      " '" + schedule_date + " " + values.schedule_time + "', " +
                      " '" + values.schedule_type + values.schedule_remarks + "', " +
                      " '" + values.schedule_remarks + "', " +
                      " 'CRM LEAD', " +
                      " '" + lsemployee_gid + "', " +
                      " '" + DateTime.Now.ToString("yyyy-MM-dd") + "', " +
                      " '" + user_gid + "', " +
                      " '" + msGetGid + "' ) ";
                    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                    if (mnResult != 0)
                    {
                       

                        msGetsheduleGid = objcmnfunctions.GetMasterGID("BSLC");
                        msSQL = " Insert into crm_trn_tschedulelog ( " +
                      " schedulelog_gid, " +
                      " leadbank_gid, " +
                      " schedule_date, " +
                      " schedule_type, " +
                      " schedule_remarks, " +
                      " schedule_status, " +
                      " schedule_time, " +
                      " status_flag," +
                      " created_by, " +
                      " reference_gid," +
                      " log_gid, " +
                      " created_date ) " +
                      " Values ( " +
                      "'" + msGetsheduleGid + "'," +
                      "'" + values.campaign_list[i].leadbank_gid + "'," +
                      "'" + schedule_date + "'," +
                      "'" + values.schedule_type + "'," +
                      "'" + values.schedule_remarks + "'," +
                      " 'Pending'," +
                      " '" + values.schedule_time + "'," +
                      " 'N', " +
                      "'" + user_gid  + "'," +
                      "'" + values.campaign_list[i].lead2campaign_gid + "'," +
                      "'" + msGetGid + "'," +
                      "'" + DateTime.Now.ToString("yyyy-MM-dd  HH:mm:ss") + "')";
                        mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                        if (mnResult != 0)
                        {

                            msSQL = " update crm_trn_tlead2campaign" +
                                " set leadstage_gid='2'" +
                                " where leadbank_gid='" + values.campaign_list[i].leadbank_gid + "'" +
                                " and (leadstage_gid='1' or leadstage_gid is null) ";
                            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

                           values.status = true;
                           values.message = "Lead Transfer Successfully";
                        }
                        else
                        {
                            values.status = false;
                            values.message = "Error While Lead Transfer";
                        }
                    }
                    else
                    {
                        values.status = false;
                        values.message = "Error While Lead Transfer";
                    }
                }
                else
                {
                    values.status = false;
                    values.message = "Error While Lead Transfer";
                }

            }






        }
        public void DaGetTeamNamedropdown(string user_gid, MdlMarketingmanager values)
        {

           
            msSQL = "  SELECT campaign_gid, campaign_title FROM crm_trn_tcampaign Order by campaign_title asc ";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetTeamNamedropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetTeamNamedropdown
                    {



                        campaign_gid = dt["campaign_gid"].ToString(),
                        campaign_title = dt["campaign_title"].ToString(),
                       
                    });
                    values.GetTeamNamedropdown = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaGetTeamEmployeedropdown(string team_gid, MdlMarketingmanager values)
        {
            msSQL = " select a.employee_gid," +
               " concat(c.user_firstname, ' ',c.user_lastname)AS user_name" +
               " from crm_trn_tcampaign2employee a" +
               " left join hrm_mst_temployee b on a.employee_gid=b.employee_gid" +
               " left join adm_mst_tuser c on b.user_gid=c.user_gid" +
               " where a.campaign_gid='" + team_gid + "'";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetTeamEmployeedropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetTeamEmployeedropdown
                    {



                        employee_gid = dt["employee_gid"].ToString(),
                        user_name = dt["user_name"].ToString(),
                        



                    });
                    values.GetTeamEmployeedropdown = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
    }
}