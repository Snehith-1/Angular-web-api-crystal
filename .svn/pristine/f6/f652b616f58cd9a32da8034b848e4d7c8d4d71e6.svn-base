import { Component} from '@angular/core';
import { FormGroup } from '@angular/forms';
import { FormBuilder } from '@angular/forms';
import { FormControl } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { SocketService } from 'src/app/ems.utilities/services/socket.service';
import { ToastrService } from 'ngx-toastr';
import { AES, enc } from 'crypto-js';
interface Assign {
     productgroup_gid: string;
      productgroup_name: string;
      product_gid: string;
      product_name: string;
      productuom_gid: string;
      productuom_name: string;
      customerproduct_code: string;
      product_price: string;
      pricesegment_gid: string;
      pricesegment_name: string;

}

@Component({
  selector: 'app-smr-mst-product-assign',
  templateUrl: './smr-mst-product-assign.component.html',
  styleUrls: ['./smr-mst-product-assign.component.scss']
})
export class SmrMstProductAssignComponent {


  productgroup_list: any [] = [];
  ProductForm!: FormGroup;
  product_list: any [] = [];
  productuom_list: any [] = [];
  group_list: any [] = [];
  head_list: any [] = [];
  assign!:Assign;
  mdlProductName:any;
  responsedata: any;
  productasgn: any;
  data:any;
  mdlProductUnitName:any;
  mdlProducGrouptName:any;

  constructor(private fb: FormBuilder, private router: ActivatedRoute, private route: Router, private service: SocketService, private ToastrService: ToastrService) {
   this.assign = {} as Assign
   }
  ngOnInit():void {
  this.GetSmrMstProductAssignSummary;
    this.ProductForm = new FormGroup({
      product_gid: new FormControl(''),
      product_name: new FormControl(''),
      productgroup_gid: new FormControl(''),
      productgroup_name: new FormControl(''),
      productuom_gid: new FormControl(''),
      productuom_name: new FormControl(''),
      customerproduct_code: new FormControl(''),
      product_price: new FormControl(''),

    });
    

    ////Product Group Dropdown//////
    debugger
   var url = 'SmrMstPricesegmentSummary/GetSmrGroupDtl'
   this.service.get(url).subscribe((result:any)=>{
    this.group_list = result.GetSmrGroupDtl;
   });
//// Product Name Dropdown ///////
var url = 'SmrMstPricesegmentSummary/GetSmrProductDtl'
this.service.get(url).subscribe((result:any)=>{
  this.product_list = result.GetSmrProductDtl;
});

    //////Product Unit DropDown //////
    debugger
    var api3='SmrMstPricesegmentSummary/GetSmrUnitDtl'
    this.service.get(api3).subscribe((result:any)=>{
      this.productuom_list = result.GetSmrUnitDtl;
    
    });
    
   
  
debugger
    this.productasgn = this.router.snapshot.paramMap.get('pricesegment_gid');
    const secretKey = 'storyboarderp';
    const deencryptedParam = AES.decrypt(this.productasgn, secretKey).toString(enc.Utf8);
   console.log(deencryptedParam);
    
  }

  
  GetSmrMstProductAssignSummary(pricesegment_gid: any, pricesegment_name: any) {       
  debugger
    let param = {
      pricesegment_gid: pricesegment_gid,
      pricesegment_name : pricesegment_name
    }
    var url = 'SmrMstPricesegmentSummary/GetSmrMstProductAssignSummary'
    this.service.getparams(url, param).subscribe((result: any) => {
      $('#productgroup_list').DataTable().destroy();
     this.responsedata=result;
     this.productgroup_list = result.productgroup_list
     setTimeout(() => {
      $('#productgroup_list').DataTable();
    }, 1);

    });
  }
  


  openModaldelete(parameter : string){

  }
  openModaledit(parameter: string){

  }

  GetOnChangeProductName(){
    let product_gid = this.ProductForm.value.product_name.product_gid;
    let param = {
      product_gid: product_gid
    }
    var url = 'SmrMstPricesegmentSummary/GetOnChangeProductName';
    this.service.getparams(url, param).subscribe((result: any) => {
      this.ProductForm.get("productgroup_name")?.setValue(result.OnChangeProductName[0].productgroup_name);
      this.ProductForm.get("productuom_name")?.setValue(result.OnChangeProductName[0].productuom_name);
      this.ProductForm.value.productgroup_gid = result.OnChangeProductName[0].productgroup_gid,
        this.ProductForm.value.productuom_gid = result.OnChangeProductName[0].productuom_gid
    });

  }
  get product_name() {
    return this.ProductForm.get('product_name')!;
  }

  onsubmit(){

  }
}
