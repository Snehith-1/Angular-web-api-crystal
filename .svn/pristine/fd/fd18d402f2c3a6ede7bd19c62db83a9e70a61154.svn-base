using ems.crm.DataAccess;
using ems.crm.Models;
using ems.utilities.Functions;
using ems.utilities.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Net;
using System.Web;
using System.Web.Http;

namespace ems.crm.Controllers
{
    [Authorize]
    [RoutePrefix("api/Leadbank360")]
    public class Leadbank360Controllerr : ApiController
    {
        session_values Objgetgid = new session_values();
        logintoken getsessionvalues = new logintoken();
        DaLeadbank360 objDaLeadbank360 = new DaLeadbank360();
        [ActionName("GetWhatsappLeadContact")]
        [HttpGet]
        public HttpResponseMessage GetWhatsappLeadContact(string leadbank_gid)
        {
            MdlLeadbank360 values = new MdlLeadbank360();
            objDaLeadbank360.DaGetWhatsappLeadContact(values, leadbank_gid);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        [ActionName("GetWhatsappLeadMessage")]
        [HttpGet]
        public HttpResponseMessage GetWhatsappLeadMessage(string leadbank_gid)
        {
            MdlLeadbank360 values = new MdlLeadbank360();
            objDaLeadbank360.DaGetWhatsappLeadMessage(values, leadbank_gid);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }
        [ActionName("PostLeadWhatsappMessage")]
        [HttpPost]
        public HttpResponseMessage PostLeadWhatsappMessage(leadwhatsappsendmessage values)
        {

            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            result objResult = new result();
            objResult = objDaLeadbank360.DaPostLeadWhatsappMessage(values, getsessionvalues.user_gid);
            return Request.CreateResponse(HttpStatusCode.OK, objResult);
        }
        [ActionName("LeadMailSend")]
        [HttpPost]
        public HttpResponseMessage LeadMailSend(leadmailsummary_list values)
        {

            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            result objResult = new result();
            objDaLeadbank360.DaLeadMailSend(values, getsessionvalues.user_gid, objResult);
            return Request.CreateResponse(HttpStatusCode.OK, objResult);
        }
        [ActionName("GetEmailSendDetails")]
        [HttpGet]
        public HttpResponseMessage GetEmailSendDetails(string leadbank_gid)
        {
            MdlLeadbank360 values = new MdlLeadbank360();
            objDaLeadbank360.DaGetEmailSendDetails(values, leadbank_gid);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }
        [ActionName("LeadMailUpload")]
        [HttpPost]
        public HttpResponseMessage LeadMailUpload()
        {
            HttpRequest httpRequest;
            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            httpRequest = HttpContext.Current.Request;
            result objResult = new result();
            objDaLeadbank360.DaLeadMailUpload(httpRequest, getsessionvalues.user_gid, objResult);
            return Request.CreateResponse(HttpStatusCode.OK, objResult);
        }
        [ActionName("GetLeadOrderDetails")]
        [HttpGet]
        public HttpResponseMessage GetLeadOrderDetails(string leadbank_gid)
        {
            MdlLeadbank360 values = new MdlLeadbank360();
            objDaLeadbank360.DaGetLeadOrderDetails(values, leadbank_gid);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }
 

    }
}