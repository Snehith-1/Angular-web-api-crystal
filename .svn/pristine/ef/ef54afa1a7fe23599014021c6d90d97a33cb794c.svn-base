import { Component } from '@angular/core';
import { FormBuilder, FormControl, FormGroup, Validators,  ValidationErrors,
  AbstractControl,
  ValidatorFn } from '@angular/forms';
import { ToastrService } from 'ngx-toastr';
import { SocketService } from 'src/app/ems.utilities/services/socket.service';
interface IFacebook {
  image_caption: string;
  video_caption: string;

}
@Component({
  selector: 'app-crm-smm-facebookpage',
  templateUrl: './crm-smm-facebookpage.component.html',
  styleUrls: ['./crm-smm-facebookpage.component.scss']
})
export class CrmSmmFacebookpageComponent {
  file!:File;
  facebook_list: any;
  username:any;
  picture:any;
  friends:any;
  posts:any;
  videos:any;
  posts1: string[]=[];
  posts2:string[]=[];
  posts3:string[]=[];
  posts4:string[]=[];
  email:any;
  birthday:any;
  gender:any;
  age_range:any;
  hometown:any;
  present:any;

  facebookpage_list:any;
  followers_count: any;
  link: any;
  id: any;
  cover: any;
  phone:any;
  category:any;
  facebook!: IFacebook;
  FacebookImageForm!: FormGroup;
  constructor(private formBuilder: FormBuilder, private ToastrService: ToastrService, public service: SocketService) {
    this.facebook = {} as IFacebook;
  }
  ngOnInit(): void {
    this.GetPagedetails();
    this.FacebookImageForm = new FormGroup({

      image_caption: new FormControl(this.facebook.image_caption, [
        Validators.required,
        this.noWhitespaceValidator(),

      ]),




    });
   

}
noWhitespaceValidator(): ValidatorFn {
  return (control: AbstractControl): ValidationErrors | null => {
    const isWhitespace = (control.value || '').trim().length === 0;
    return isWhitespace ? { whitespace: true } : null;
  };
}
GetPagedetails(){
  var url1 = 'Facebook/GetPagedetails'
  this.service.get(url1).subscribe((result,) => {

    this.facebookpage_list = result;
    this.username = this.facebookpage_list.name;
    this.id = this.facebookpage_list.id;
    this.link = this.facebookpage_list.link;
    this.phone = this.facebookpage_list.phone;
    this.followers_count = this.facebookpage_list.followers_count;
    this.picture = this.facebookpage_list.picture.data.url;
    this.cover = this.facebookpage_list.cover.source;
    this.category = this.facebookpage_list.category
    this.posts = this.facebookpage_list.posts.data
    this.videos = this.facebookpage_list.videos.data

   // console.log(this.facebookpage_list)

  });
}
onChange2(event:any) {
  this.file =event.target.files[0];

  }
////////////Add popup validtion////////
get image_caption() {
  return this.FacebookImageForm.get('image_caption')!;
}
public onsubmit(): void {
     let formData = new FormData();
       if(this.file !=null &&  this.file != undefined){

          
          formData.append("file", this.file,this.file.name);
        
          formData.append("image_caption", this.FacebookImageForm.value.image_caption);
          var api='Facebook/UploadImage'
          this.service.postfile(api,formData).subscribe((result:any) => {

            if(result.status ==false){
              this.FacebookImageForm.reset();
              this.GetPagedetails();
              this.ToastrService.warning(result.message)
            }
            else{
              this.FacebookImageForm.reset();
              this.GetPagedetails();
              this.ToastrService.success(result.message)
            }
          });

       }else{
        this.ToastrService.warning("Kindly Upload Image/Video !!")
       }
}
onclose() {
  this.FacebookImageForm.reset();

}
}
