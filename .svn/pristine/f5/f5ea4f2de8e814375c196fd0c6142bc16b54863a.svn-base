using ems.utilities.Functions;
using System;
using System.Collections.Generic;
using System.Data.Odbc;
using System.Data;
using System.Linq;
using System.Web;
using ems.crm.Models;

namespace ems.crm.DataAccess
{
    public class DaCampaignService
    {
        dbconn objdbconn = new dbconn();
        cmnfunctions objcmnfunctions = new cmnfunctions();
        string msSQL = string.Empty;
        string msSQL1 = string.Empty;
        OdbcDataReader objodbcDataReader;
        DataTable dt_datatable;
        int mnResult;
        string msGetGid, msGetGid1;

        public void DaGetWhatsappSummary(MdlCampaignService values)
        {
            msSQL = " select * from crm_smm_whatsapp_service";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getmodulelist = new List<campaignservice_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getmodulelist.Add(new campaignservice_list
                    {
                        access_token = dt["access_token"].ToString(),
                        base_url = dt["base_url"].ToString(),
                        workspace_id = dt["workspace_id"].ToString(),
                        created_by = dt["created_by"].ToString(),

                        created_date = dt["created_date"].ToString(),




                    });
                    values.campaignservice_list = getmodulelist;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaPostCampaignService(string user_gid, campaignservice_list values)

        {
            
                    msSQL = " insert into crm_smm_whatsapp_service(" +
                            " access_token," +
                            " base_url," +
                            " workspace_id," +
                           
                            " created_by," +
                            " created_date)" +
                            " values(" +
                             "'" + values.access_token + "'," +
                            "'" + values.base_url + "'," +
                            " '" + values.workspace_id + "',"+
                            "'" + user_gid + "'," +
                             "'" + DateTime.Now.ToString("yyyy-MM-dd") + "')";
                    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);



                    if (mnResult != 0)
                    {
                        values.status = true;
                        values.message = "Campaign Settings Added Successfully !!";
                    }
                    else
                    {
                        values.status = false;
                        values.message = "Error While Adding Campaign Settings!!";
                    }
                }

        public void DaGetShopifySummary(MdlCampaignService values)
        {
            msSQL = " select * from crm_smm_shopify_service";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getmodulelist = new List<shopifycampaignservice_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getmodulelist.Add(new shopifycampaignservice_list
                    {
                        shopify_access_token = dt["access_token"].ToString(),
                        shopify_store_name = dt["shopify_store_name"].ToString(),
                        shopify_store_month_year = dt["store_month_year"].ToString(),
                        shopify_created_by = dt["created_by"].ToString(),

                        shopify_created_date = dt["created_date"].ToString(),




                    });
                    values.shopifycampaignservice_list = getmodulelist;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaGetMailSummary(MdlCampaignService values)
        {
            msSQL = " select * from crm_smm_mail_service";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getmodulelist = new List<mailcampaignservice_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getmodulelist.Add(new mailcampaignservice_list
                    {
                        mail_access_token = dt["access_token"].ToString(),
                        mail_base_url = dt["base_url"].ToString(),
                        mail_created_by = dt["created_by"].ToString(),

                        mail_created_date = dt["created_date"].ToString(),




                    });
                    values.mailcampaignservice_list = getmodulelist;
                }
            }
            dt_datatable.Dispose();
        }

    }
}
    