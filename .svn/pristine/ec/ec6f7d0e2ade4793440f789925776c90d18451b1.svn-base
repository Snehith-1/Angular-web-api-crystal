using ems.sales.DataAccess;
using ems.sales.Models;
using ems.utilities.Functions;
using ems.utilities.Models;
using System.Net.Http;
using System.Net;
using System.Web.Http;


using ems.sales.DataAccess;

using ems.sales.Models;

using ems.utilities.Functions;

using ems.utilities.Models;

using System;

using System.Collections.Generic;

using System.Linq;

using System.Net.Http;

using System.Net;

using System.Web;

using System.Web.Http;
 
namespace ems.sales.Controllers

{

    [RoutePrefix("api/SmrTrnCustomerEnquiry")]

    [Authorize]

    public class SmrTrnCustomerEnquiryController : ApiController

    {

        session_values Objgetgid = new session_values();

        logintoken getsessionvalues = new logintoken();

        DaSmrTrnCustomerEnquiry objsales = new DaSmrTrnCustomerEnquiry();

        //summary

        [ActionName("GetCustomerEnquirySummary")]

        [HttpGet]

        public HttpResponseMessage GetCustomerEnquirySummary()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetCustomerEnquirySummary(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        //Lead DropDown

        [ActionName("GetLeadDtl")]

        [HttpGet]

        public HttpResponseMessage GetLeadDtl()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetLeadDtl(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        //Update Close

        [ActionName("GetUpdatedCloseEnquiry")]

        [HttpPost]

        public HttpResponseMessage GetUpdatedCloseEnquiry(GetCusEnquiry values)

        {

            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();

            getsessionvalues = Objgetgid.gettokenvalues(token);

            objsales.DaGetUpdatedCloseEnquiry(getsessionvalues.user_gid, values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        //Team DropDown

        [ActionName("GetTeamDtl")]

        [HttpGet]

        public HttpResponseMessage GetTeamDtl()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetTeamDtl(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        //Employee DropDown

        [ActionName("GetEmployeeDtl")]

        [HttpGet]

        public HttpResponseMessage GetEmployeeDtl()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetEmployeeDtl(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        //Update Reassign

        [ActionName("GetUpdatedReAssignEnquiry")]

        [HttpPost]

        public HttpResponseMessage GetUpdatedReAssignEnquiry(GetCusEnquiry values)

        {

            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();

            getsessionvalues = Objgetgid.gettokenvalues(token);

            objsales.DaGetUpdatedReAssignEnquiry(getsessionvalues.user_gid, values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }


        // Add Page

        [ActionName("GetProductGroup")]

        [HttpGet]

        public HttpResponseMessage GetProductGroup()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetProductGrp(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetProduct")]

        [HttpGet]

        public HttpResponseMessage GetProduct()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetProducts(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetProductUnit")]

        [HttpGet]

        public HttpResponseMessage GetProductUnit()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetProductunit(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetCustomer")]

        [HttpGet]

        public HttpResponseMessage GetCustomer()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetCustomer(values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetOnChangeCustomerName")]

        [HttpGet]

        public HttpResponseMessage GetOnChangeCustomerName(string customercontact_gid)

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetOnChangeCustomerName(customercontact_gid, values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetOnChangeProductsName")]

        [HttpGet]

        public HttpResponseMessage GetOnChangeProductsName(string product_gid)

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            objsales.DaGetOnChangeProductsName(product_gid, values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetProductsSummary")]

        [HttpGet]

        public HttpResponseMessage GetProductSummary()

        {

            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();

            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();

            getsessionvalues = Objgetgid.gettokenvalues(token);

            objsales.DaProductsSummary(getsessionvalues.user_gid, values);

            return Request.CreateResponse(HttpStatusCode.OK, values);

        }
        [ActionName("PostOnAdds")]
        [HttpPost]
        public HttpResponseMessage PostOnAdds(productsummarys_list values)
        {
            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            objsales.DaPostOnAdds(getsessionvalues.user_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Currency dropdown for Raise quotation

        [ActionName("GetCurrencyDets")]
        [HttpGet]
        public HttpResponseMessage GetCurrencyDets()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetCurrencyDets(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Product dropdown for Raise Quotation

        [ActionName("GetProductDets")]
        [HttpGet]
        public HttpResponseMessage GetProductDets()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetProductDets(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // On change product for enquiry to quotation


        [ActionName("GetOnChangeProductNameDets")]
        [HttpGet]
        public HttpResponseMessage GetOnChangeProductNameDets(string product_gid)
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetOnChangeProductNameDets(product_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetOnChangeTerms")]
        [HttpGet]
        public HttpResponseMessage GetOnChangeTerms(string template_gid)
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetOnChangeTerms(template_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        // Tax 1 dropdown

        [ActionName("GetFirstTax")]
        [HttpGet]
        public HttpResponseMessage GetFirstTax()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetFirstTax(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Tax 2 dropdown

        [ActionName("GetSecondTax")]
        [HttpGet]
        public HttpResponseMessage GetSecondTax()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetSecondTax(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Tax 3 dropdown

        [ActionName("GetThirdTax")]
        [HttpGet]
        public HttpResponseMessage GetThirdTax()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetThirdTax(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Tax 4 dropdown

        [ActionName("GetFourthTax")]
        [HttpGet]
        public HttpResponseMessage GetFourthTax()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetFourthTax(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Branch dropdown

        [ActionName("GetBranchDet")]
        [HttpGet]
        public HttpResponseMessage GetBranchDet()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetBranchDet(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }
        // Terms And Condition dropdown

        [ActionName("GetTerms")]
        [HttpGet]
        public HttpResponseMessage GetTerms()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetTerms(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Summary bind

        [ActionName("GetQOSummary")]
        [HttpGet]
        public HttpResponseMessage GetQOSummary(string enquiry_gid)
        {
            MdlSmrTrnCustomerEnquiry objresult = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetQOSummary(enquiry_gid, objresult);
            return Request.CreateResponse(HttpStatusCode.OK, objresult);
        }

        //Product temp summary for enquiry to quotation


        [ActionName("GetTempSummary")]
        [HttpGet]
        public HttpResponseMessage GetTempSummary()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            objsales.DaGetTempSummary(getsessionvalues.employee_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);

        }

        [ActionName("GetOnProductAdd")]
        [HttpPost]
        public HttpResponseMessage GetOnProductAdd(Productsummarys_lists values)
        {
            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            objsales.DaGetOnProductAdd(getsessionvalues.employee_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Employee Dropdown

        [ActionName("GetEmployeePerson")]
        [HttpGet]
        public HttpResponseMessage GetEmployeePerson()
        {
            MdlSmrTrnCustomerEnquiry values = new MdlSmrTrnCustomerEnquiry();
            objsales.DaGetEmployeePerson(values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }


        // delete for direct enquiry event

        [ActionName("GetDeleteEnquiryProductSummary")]
        [HttpGet]
        public HttpResponseMessage GetDeleteEnquiryProductSummary(string tmpsalesenquiry_gid)
        {
            productsummarys_list objresult = new productsummarys_list();
            objsales.DaGetDeleteEnquiryProductSummary(tmpsalesenquiry_gid, objresult);
            return Request.CreateResponse(HttpStatusCode.OK, objresult);
        }

        // delete for enq to quote event

        [ActionName("GetDeleteQuoteProductSummary")]
        [HttpGet]
        public HttpResponseMessage GetDeleteQuoteProductSummary(string tmpquotationdtl_gid)
        {
            productsummarys_list objresult = new productsummarys_list();
            objsales.DaGetDeleteQuoteProductSummary(tmpquotationdtl_gid, objresult);
            return Request.CreateResponse(HttpStatusCode.OK, objresult);
        }

        [ActionName("PostCustomerEnquirytoQuotation")]
        [HttpPost]
        public HttpResponseMessage PostCustomerEnquirytoQuotation(postquotation_list values)
        {
            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            objsales.DaPostCustomerEnquirytoQuotation(getsessionvalues.employee_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }

        // Overall Submit by Pugaz
        [ActionName("PostCustomerEnquiry")]
        [HttpPost]
        public HttpResponseMessage PostCustomerEnquiry(PostAll values)
        {
            string token = Request.Headers.GetValues("Authorization").FirstOrDefault();
            getsessionvalues = Objgetgid.gettokenvalues(token);
            objsales.DaPostCustomerEnquiry(getsessionvalues.employee_gid, getsessionvalues.user_gid, values);
            return Request.CreateResponse(HttpStatusCode.OK, values);
        }
    }

}